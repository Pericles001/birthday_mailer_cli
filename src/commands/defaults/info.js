/**
 * Default information method of bd_mailer
 *
 * usage : display informations about program
 *
 * args : <i> <info> <-i> <-info>
 *         <--info>
 *
 */
import {ask} from "../configs/parameters.js";

const info = () => {
    console.log('\n',
        '🎉 Birthday Mailer CLI - Made by Pericles001\n',
        '═══════════════════════════════════════════\n',
        '\n',
        '📧 A powerful command-line tool for automating birthday messages\n',
        'Perfect for developers and terminal enthusiasts!\n',
        '\n',
        '🎯 PURPOSE: Automated Birthday Message Delivery\n',
        '\n',
        '📬 SUPPORTED CHANNELS:\n',
        '\t ✅ Gmail (Fully Implemented with HTML & Text)\n',
        '\t 🚧 Telegram Bot Integration (Planned)\n',
        '\t 🚧 WhatsApp Automation (Planned)\n',
        '\t 🚧 SMS Support via Twilio (Planned)\n',
        '\n',
        '⚡ CURRENT FEATURES:\n',
        '\t • Interactive CLI configuration system\n',
        '\t • Gmail integration with beautiful HTML templates\n',
        '\t • Automatic birthday scheduling (Daily at 9:00 AM)\n',
        '\t • Personalized birthday messages\n',
        '\t • Email configuration testing & validation\n',
        '\t • Secure App Password authentication\n',
        '\t • Cross-platform support (Linux/WSL/Mac)\n',
        '\t • Email logs & history tracking\n',
        '\t • Birthday detection and automatic sending\n',
        '\t • Manual and scheduled email options\n',
        '\n',
        '🚧 FUTURE IMPLEMENTATIONS:\n',
        '\t • Multiple recipients management\n',
        '\t • Custom scheduling times\n',
        '\t • Calendar integration (.ics export)\n',
        '\t • Desktop notifications\n',
        '\t • Birthday reminder templates\n',
        '\t • Web dashboard interface\n',
        '\t • Birthday countdown features\n',
        '\n',
        '🔐 EMAIL SETUP REQUIREMENTS:\n',
        '\t 1. Gmail account with 2-Factor Authentication enabled\n',
        '\t 2. Gmail App Password (NOT your regular password)\n',
        '\t 3. .env file with GMAIL_USER and GMAIL_APP_PASSWORD\n',
        '\t 4. Node.js environment (Linux/WSL/Mac recommended)\n',
        '\n',
        '📝 COMPLETE SETUP GUIDE:\n',
        '\t 🔧 STEP 1: Initial Configuration\n',
        '\t\t ./mailer.js config         # Your personal information\n',
        '\t\t ./mailer.js to             # Recipient details\n',
        '\t\t ./mailer.js set date       # Birthday date\n',
        '\t\t ./mailer.js set msg        # Custom message\n',
        '\n',
        '\t 📧 STEP 2: Email Setup\n',
        '\t\t • Create .env file in project root\n',
        '\t\t • Add Gmail credentials (see below)\n',
        '\t\t ./mailer.js email test     # Test connection\n',
        '\n',
        '\t 🚀 STEP 3: Testing & Launch\n',
        '\t\t ./mailer.js status         # Check configuration\n',
        '\t\t ./mailer.js send           # Send test email\n',
        '\t\t ./mailer.js schedule start # Enable automation\n',
        '\n',
        '🔑 GET GMAIL APP PASSWORD:\n',
        '\t • Visit: https://myaccount.google.com/apppasswords\n',
        '\t • Select "Mail" or "Other (Custom name)"\n',
        '\t • Copy the 16-character password (no spaces)\n',
        '\t • Create .env file: GMAIL_USER=your-email@gmail.com\n',
        '\t • Add password: GMAIL_APP_PASSWORD=abcdefghijklmnop\n',
        '\n',
        '🚀 ALL AVAILABLE COMMANDS:\n',
        '\t 🔧 Configuration:\n',
        '\t\t config         - Set up your personal information\n',
        '\t\t to             - Configure recipient details\n',
        '\t\t set msg        - Create birthday message\n',
        '\t\t set date       - Set recipient\'s birthday\n',
        '\n',
        '\t 📧 Email Operations:\n',
        '\t\t email send     - Send birthday email now\n',
        '\t\t email test     - Test email configuration\n',
        '\t\t email status   - Check email setup status\n',
        '\t\t send           - Quick send (shortcut)\n',
        '\n',
        '\t ⏰ Scheduler Operations:\n',
        '\t\t schedule start - Start automatic checking\n',
        '\t\t schedule stop  - Stop automatic checking\n',
        '\t\t schedule status- Check scheduler status\n',
        '\t\t schedule test  - Test birthday detection\n',
        '\t\t schedule logs  - View email history\n',
        '\t\t schedule clear - Clear email logs\n',
        '\n',
        '\t 📊 Information & Status:\n',
        '\t\t status         - Overall system status\n',
        '\t\t list           - Show all configurations\n',
        '\t\t help           - Show command help\n',
        '\t\t version        - Show version number\n',
        '\n',
        '⏰ SCHEDULER FEATURES:\n',
        '\t • Runs daily at 9:00 AM (UTC timezone)\n',
        '\t • Automatically detects matching birthdays\n',
        '\t • Sends personalized HTML emails\n',
        '\t • Logs all sent emails with timestamps\n',
        '\t • Prevents duplicate sends on same day\n',
        '\t • Easy start/stop/status controls\n',
        '\t • Manual testing and simulation\n',
        '\n',
        '🧪 TESTING FEATURES:\n',
        '\t • Email connectivity testing\n',
        '\t • Birthday detection simulation\n',
        '\t • Manual birthday triggers\n',
        '\t • Configuration validation\n',
        '\t • Gmail authentication verification\n',
        '\n',
        '🏗️  ARCHITECTURE:\n',
        '\t • Modular ES6 JavaScript design\n',
        '\t • Local storage for configuration\n',
        '\t • Nodemailer for email delivery\n',
        '\t • Node-cron for scheduling\n',
        '\t • Cross-platform compatibility\n',
        '\n',
        '🤝 CONTRIBUTE:\n',
        '\t GitHub: https://github.com/Pericles001/birthday_mailer_cli\n',
        '\t We welcome contributions, bug reports, and feature requests!\n',
        '\t Join our community of developers making birthdays special!\n',
        '\n',
        '💡 This tool is actively developed with new features being added regularly.\n',
        'Perfect for automating those important birthday wishes! 🎂\n',
        '\n',
        'Thank you for using Birthday Mailer CLI!\n'
    );
    ask.close();
};

export {info};